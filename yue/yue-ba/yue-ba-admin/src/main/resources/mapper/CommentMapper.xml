<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--对象关系映射文件——将原生java对象(POJO)与数据库表相关联
对持久层的sql语句进行映射
namespace等于mapper接口类路径，这样实现通过映射文件找到对应的mapper接口是哪个-->
<mapper namespace="com.yb.yue.ba.admin.mapper.CommentMapper">
    <!--查询所有语句-->
    <sql id="allColumns">
        SELECT
          a.id,
          a.fcmid,
          a.commentator_id,
          a.parent_comment_id,
          a.content,
          a.created
        FROM
          yb_comment AS a
    </sql>

    <sql id="left">
        LEFT JOIN yb_friend_cirle_message AS b ON a.fcmid=b.id
    </sql>

    <!--根据朋友圈id获取所有父评论-->
    <select id="selectParentCommentByFcmId" resultType="Comment">
        <include refid="allColumns"></include>
        <include refid="left"></include>
        WHERE a.parent_comment_id=0
        AND
        a.fcmid=#{fcmid}
        ORDER BY a.created DESC
    </select>

    <!--根据父评论id获取所有子评论-->
    <select id="selectChildCommentByParentCommentId" resultType="Comment">
        <include refid="allColumns"></include>
        WHERE a.parent_comment_id=#{parentCommentId}
        ORDER BY a.created DESC
    </select>

    <!--添加评论-->
    <insert id="insert">
        INSERT INTO yb_comment(fcmid,parent_comment_id,commentator_id,content,created)
        values(#{fcmid},#{parentCommentId},#{commentatorId},#{content},#{created})
    </insert>

    <delete id="delete">
        delete from yb_comment WHERE fcmid=#{fcmid}
    </delete>
</mapper>